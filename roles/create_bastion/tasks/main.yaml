---

- name: Load in variables from env.yaml
  tags: kvm_host, bastionvm
  include_vars: env.yaml

- name: enable cockpit console
  tags: kvm_host, bastionvm
  command: systemctl enable --now cockpit.socket

- name: remove working directory for idempotency
  tags: kvm_host, bastionvm
  file:
    path: /var/lib/libvirt/images/tmp
    state: absent

- name: create working directory
  tags: kvm_host, bastionvm
  file:
    path: /var/lib/libvirt/images/tmp
    state: directory
    mode: '0755'

- name: check to see if qcow2 file already exists on KVM host
  tags: bastionvm
  stat:
    path: /var/lib/libvirt/images/bastion_base.qcow2
  register: qcow2_check

- name: copy RHEL qcow2 file to KVM host. This may take a while.
  tags: kvm_host, bastionvm
  copy:
    src: "{{ env_rhel_qcow2 }}"
    dest: /var/lib/libvirt/images/bastion_base.qcow2
    mode: '0775'
  when: qcow2_check.stat.exists == false
  register: rhel_qcow2_download

- name: remove snapshot for idempotency
  tags: kvm_host, bastionvm
  file:
    path: /var/lib/libvirt/images/{{env_bastion_name}}-snapshot-cloudimg.qcow2
    state: absent

- name: create base image
  tags: kvm_host, bastionvm
  command: "qemu-img create -b /var/lib/libvirt/images/bastion_base.qcow2 -f qcow2 /var/lib/libvirt/images/{{env_bastion_name}}-snapshot-cloudimg.qcow2 {{env_bastion_disk_size}}G"
  register: qemu_create

- name: print result of creation of base image
  tags: kvm_host, bastionvm
  debug:
    var: qemu_create

- name: get info about qemu image creation
  tags: kvm_host, bastionvm
  command: "qemu-img info /var/lib/libvirt/images/{{env_bastion_name}}-snapshot-cloudimg.qcow2"
  register: qemu_info

- name: print output from qemu image creation information
  tags: kvm_host, bastionvm
  debug:
    var: qemu_info

- name: create instance-id
  tags: kvm_host, bastionvm
  shell: "echo \"instance-id: $(uuidgen || echo i-abcdefg)\" > /var/lib/libvirt/images/tmp/meta-data"
  register: uuidgen

- name: print output from uuidgen command
  tags: kvm_host, bastionvm
  debug:
    var: uuidgen

- name: Use cloud_init.cfg.j2 template to make user-data file
  tags: kvm_host, bastionvm
  template:
    src: cloud_init.cfg.j2
    dest: /var/lib/libvirt/images/tmp/user-data

- name: Use network_config_static.cfg.j2 template to make network-config file
  tags: kvm_host, bastionvm
  template:
    src: network_config_static.cfg.j2
    dest: /var/lib/libvirt/images/tmp/network-config

- name: generate iso file
  tags: kvm_host, bastionvm
  command: genisoimage -output /var/lib/libvirt/images/{{env_bastion_name}}-seed.img -volid cidata -joliet -rock /var/lib/libvirt/images/tmp/meta-data /var/lib/libvirt/images/tmp/network-config /var/lib/libvirt/images/tmp/user-data
  register: gen_iso

- name: print output from generating iso
  tags: kvm_host, bastionvm
  debug:
    var: gen_iso

- name: check if bastion already exists. Expect an ignored error if it doesn't exist.
  tags: kvm_host, bastionvm
  community.libvirt.virt:
    name: "{{ env_bastion_name }}"
    command: status
  register: bastion_check
  ignore_errors: true

- name: Boot bastion
  tags: kvm_host, bastionvm
  command: virt-install 
    --name {{env_bastion_name}} \
    --virt-type kvm --memory {{env_bastion_ram}} --vcpus {{env_bastion_vcpu}} \
    --boot hd \
    --disk path=/var/lib/libvirt/images/{{env_bastion_name}}-seed.img,device=cdrom \
    --disk path=/var/lib/libvirt/images/{{env_bastion_name}}-snapshot-cloudimg.qcow2,device=disk \
    --graphics none \
    --os-type Linux --os-variant rhel{{env_bastion_os_variant}} \
    --network network=macvtap-net \
    --noautoconsole \
    --noreboot
  when: bastion_check.failed == true

- name: Start bastion VM
  tags: kvm_host, bastionvm
  command: virsh start {{env_bastion_name}}

- name: wait 3 minutes for automated bastion installation and configuration to complete. To monitor, use a web browser to go to https://your-kvm-host-ip-address-here:9090, sign in as root and use the password you set for env_vm_root_passwd in env.yaml, then go to the Virtual Machines tab, click on bastion's hostname.
  tags: kvm_host, bastionvm
  pause:
    minutes: 3
  when: bastion_check.failed == true