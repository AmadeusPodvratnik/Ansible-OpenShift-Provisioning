---

- name: Check if bootstrap already exists
  tags: create_bootstrap
  community.libvirt.virt:
    name: "{{ env.cluster.nodes.bootstrap.hostname }}"
    command: status
  register: bootstrap_check
  ignore_errors: true

- name: Print status of bootstrap
  tags: create_bootstrap
  debug: 
    var: bootstrap_check.msg

- name: Start bootstrap installation
  tags: create_bootstrap
  command: |
    virt-install \
    --name {{env.cluster.nodes.bootstrap.hostname}} \
    --disk pool=default,size={{ env.cluster.nodes.bootstrap.disk_size }}  \
    --ram {{ env.cluster.nodes.bootstrap.ram }} \
    --cpu host \
    --vcpus {{ env.cluster.nodes.bootstrap.vcpu }} \
    --network network={{env.bridge_name}} \
    --location {{ env.z.lpar.storage_group.pool_path }},kernel=rhcos-live-kernel-s390x,initrd=rhcos-live-initramfs.s390x.img \
    --extra-args "rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=vda coreos.live.rootfs_url=http://{{vault.bastion.networking.ip}}:8080/bin/rhcos-live-rootfs.s390x.img ip={{env.cluster.nodes.bootstrap.ip}}::{{env.z.lpar.networking.gateway}}:{{env.z.lpar.networking.subnetmask}}:{{env.cluster.nodes.bootstrap.hostname}}::none:1500 nameserver={{env.cluster.networking.nameserver}} {{ ('--nameserver=' + env.cluster.networking.nameserver2) if env.cluster.networking.nameserver2 is defined else '' }} coreos.inst.ignition_url=http://{{vault.bastion.networking.ip}}:8080/ignition/bootstrap.ign" \
    --graphics none \
    --wait=-1 \
    --noautoconsole 
  when: bootstrap_check.failed == true

- name: Set bootstrap qcow2 permissions
  become: true
  tags: create_bootstrap
  command: chmod 600 {{ env.z.lpar.storage_group.pool_path }}/{{env.cluster.nodes.bootstrap.hostname}}.qcow2

- name: Set bootstrap qcow2 ownership to qemu
  become: true
  tags: create_bootstrap
  command: chown qemu:qemu {{ env.z.lpar.storage_group.pool_path }}/{{env.cluster.nodes.bootstrap.hostname}}.qcow2