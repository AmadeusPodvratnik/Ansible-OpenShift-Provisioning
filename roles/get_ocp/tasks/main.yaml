---

- name: Create directory bin for mirrors
  tags: get_ocp
  become: true
  file:
    path: /var/www/html/bin
    state: directory
    mode: '0755'
    owner: "{{ env.bastion.access.user }}"
    group: "{{ env.bastion.access.user }}"
 
- name: Check to see if rootfs already exists on bastion
  tags: get_ocp
  stat:
    path: /var/www/html/bin/rhcos-live-rootfs.s390x.img
  register: rootfs_check

- name: Get Red Hat CoreOS rootfs file if it's not there already.
  tags: get_ocp
  get_url:
    url: "{{ env.coreos.rootfs }}"
    dest: /var/www/html/bin/rhcos-live-rootfs.s390x.img
    mode: '0755'
    force: yes
  when: rootfs_check.stat.exists == false

- name: Delete OCP download directory for idempotency, because ignition files deprecate after 24 hours.
  tags: get_ocp
  become: true
  file: 
    path: /home/{{ env.bastion.access.user }}/ocpinst
    state: absent

- name: Create OCP download directory
  tags: get_ocp
  file: 
    path: /home/{{ env.bastion.access.user }}/ocpinst
    state: directory

- name: Unzip OCP client and installer
  tags: get_ocp
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /home/{{ env.bastion.access.user }}/ocpinst/
    remote_src: yes
  loop:
    - "{{ env.openshift.client }}"
    - "{{ env.openshift.installer }}"

- name: Copy kubectl, oc, and openshift-install binaries to /usr/local/bin
  tags: get_ocp
  become: true
  ansible.builtin.copy:
    src: /home/{{ env.bastion.access.user }}/ocpinst/{{item}}
    dest: /usr/local/bin/{{item}}
    mode: '0755'
    remote_src: yes
  loop:
    - kubectl
    - oc
    - openshift-install

- name: Use template file to create install-config
  tags: get_ocp
  template:
    src: install-config.yaml.j2
    dest: "{{ item }}"
    force: yes
  loop: 
    - /home/{{ env.bastion.access.user }}/ocpinst/install-config.yaml
    - /home/{{ env.bastion.access.user }}/ocpinst/install-config-backup.yaml

- name: Capture OCP public key
  tags: get_ocp
  command: cat /home/{{ env.bastion.access.user }}/.ssh/id_rsa.pub
  register: ocp_pub_key

- name: Place SSH key in install-config
  tags: get_ocp
  lineinfile:
    line: "sshKey: '{{ ocp_pub_key.stdout }}'"
    path: "{{ item }}"
  loop:
    - /home/{{ env.bastion.access.user }}/ocpinst/install-config.yaml
    - /home/{{ env.bastion.access.user }}/ocpinst/install-config-backup.yaml

- name: Create manifests
  tags: get_ocp
  command: /home/{{ env.bastion.access.user }}/ocpinst/openshift-install create manifests --dir=/home/{{ env.bastion.access.user }}/ocpinst/
  become: true
  
- name: Set masters schedulable parameter to false
  tags: get_ocp
  become: true
  replace:
    path: /home/{{ env.bastion.access.user }}/ocpinst/manifests/cluster-scheduler-02-config.yml
    regexp: ': true'
    replace: ': false'

- name: Set permissions for ocpinst directory contents to bastion admin user
  tags: get_ocp
  become: true
  command: chmod 0755 /home/{{ env.bastion.access.user }}/ocpinst/{{item}}
  loop:
    - manifests
    - openshift
    - .openshift_install.log
    - .openshift_install_state.json

- name: Set ownership of ocpinst directory contents to bastion admin user
  tags: get_ocp
  become: true
  command: chown {{ env.bastion.access.user }}:{{ env.bastion.access.user }} /home/{{ env.bastion.access.user }}/ocpinst/{{item}}
  loop:
    - manifests
    - openshift
    - .openshift_install.log
    - .openshift_install_state.json

- name: Create ignition files
  tags: get_ocp
  become: true
  command: /home/{{ env.bastion.access.user }}/ocpinst/openshift-install create ignition-configs  --dir=/home/{{ env.bastion.access.user }}/ocpinst/

- name: Set permissions of ignitions and related files to bastion admin user
  tags: get_ocp
  become: true
  command: chmod 0755 /home/{{ env.bastion.access.user }}/ocpinst/{{item}}
  loop: 
    - bootstrap.ign
    - master.ign
    - worker.ign
    - auth
    - metadata.json

- name: Set ownership of ignitions and related files to bastion admin user
  tags: get_ocp
  become: true
  command: chown {{ env.bastion.access.user }}:{{ env.bastion.access.user }} /home/{{ env.bastion.access.user }}/ocpinst/{{item}}
  loop: 
    - bootstrap.ign
    - master.ign
    - worker.ign
    - auth
    - auth/kubeconfig
    - auth/kubeadmin-password
    - metadata.json

- name: create ignition directory on webserver
  tags: get_ocp
  become: true
  file: 
    path: /var/www/html/ignition
    state: directory

- name: Copy ignition files to web server
  tags: get_ocp
  become: true
  copy:
    src: /home/{{ env.bastion.access.user }}/ocpinst/{{ item }}.ign
    dest: /var/www/html/ignition
    remote_src: yes
    mode: '775'
    group: "{{ env.bastion.access.user }}"
    owner: "{{ env.bastion.access.user }}"
  loop:
    - bootstrap
    - master
    - worker