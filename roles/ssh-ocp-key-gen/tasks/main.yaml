---

- name: Load in variables from env.yaml
  tags: keymastr, getocp
  include_vars: env.yaml

- name: Check to see if local .ssh directory exists
  tags: keymastr, getocp
  stat:
    path: ~/.ssh
  register: ssh_directory_exists_check

- name: Print results of .ssh directory check
  tags: keymastr
  debug:
    var: ssh_directory_exists_check

- name: Create .ssh local directory if it doesn't already exist
  tags: keymastr, getocp
  file:
    path: ~/.ssh
    state: directory
    mode: "0700"
  register: ssh_directory_creation
  when: ssh_directory_exists_check is defined and ssh_directory_exists_check.stat.exists == false

- name: Print results of ssh directory creation
  tags: keymastr
  debug:
    var: ssh_directory_creation

- name: Check .ssh key pair files exist
  tags: keymastr,getocp
  stat:
    path: ~/.ssh/{{item}}
  register: ssh_key_file_exists_check
  with_items:
    - "{{env_ssh_ocp_name}}"
    - "'{{env_ssh_ocp_name}}'.pub"

- name: Print results of ssh key pair files check
  tags: keymastr,getocp
  debug:
    var: ssh_key_file_exists_check.results[1].stat.exists

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa) and encrypted private key if it doesn't exist already
  tags: keymastr,getocp
  community.crypto.openssh_keypair:
    path: ~/.ssh/{{ env_ssh_ocp_name }}
    passphrase: "{{ env_ssh_ocp_pass }}"
    backend: opensshbin
  register: ssh_ocp
  when: ssh_key_file_exists_check is defined and ssh_key_file_exists_check.results[0].stat.exists == false and ssh_key_file_exists_check.results[1].stat.exists == false 

- name: Print results of ssh key generation
  tags: keymastr,getocp
  debug:
    var: ssh_ocp.public_key
  when: ssh_ocp.changed == true

- name: set public key fact if generated just now
  tags: keymastr,getocp
  set_fact:
    env_ssh_key_ocp: ssh_ocp.public_key
    cacheable: yes
  when: ssh_ocp.changed == true

- name: delete the public key in host_vars/bastion/main.yaml if it is already there
  tags: keymastr, getocp
  lineinfile:
    path: roles/get-ocp/vars/main.yaml
    state: absent
    regexp: "^env_ssh_key_ocp"

- name: fill host_vars/bastion/main.yaml file with generated ssh key
  tags: keymastr, getocp
  lineinfile:
    path: roles/get-ocp/vars/main.yaml
    line: "env_ssh_key_ocp: '{{ ssh_ocp.public_key }}'"
  when: ssh_ocp.changed == true

- name: copy public key from .ssh folder if it was there already and move the contents to roles/get-ocp/vars/main.yaml
  tags: keymastr, getocp
  lineinfile:
    path: roles/get-ocp/vars/main.yaml
    regexp: "^{{ lookup('file', 'roles/get-ocp/vars/main.yaml') }}"
    line: "env_ssh_key_ocp: {{ lookup('file', '~/.ssh/{{ env_ssh_ocp_name }}.pub') }}{{ lookup('file', 'roles/get-ocp/vars/main.yaml') }}"
  when: ssh_ocp.changed == false