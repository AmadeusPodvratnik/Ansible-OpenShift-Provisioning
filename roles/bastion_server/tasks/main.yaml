#This is the main task book for the bastion server to set up the load balancer, http server, and download OCP install and ignition files

# required plugin:  ansible-galaxy collection install community.general

#- name: install haproxy
#  dnf:
#  - haproxy

- name: move haproxy config file to bastion
  copy:
    src: haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
    force: yes
    backup: yes

- name: enable haproxy
  systemd:
    state: enabled
    named: haproxy

- name: Start haproxy
  systemd:
    state: restarted
    name: haproxy

## - name: update repository index
##     dnf:
##       update_cache: yes

## - name: install httpd
##     dnf:
##       name: httpd
##       state: latest

- name: Ensure the default Apache port is 8080
    replace:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^Listen 80'
      replace: 'Listen 8080'
      backup: yes

- name: Ensure the SSL default port is 4443
  replace:
    path: /etc/httpd/conf.d/ssl.conf
    regexp: '^Listen 443 https'
    replace: 'Listen 4443 https'
    backup: yes

- name: restart httpd to reflect changes to port
  service:
    name: httpd
    state: restarted

#  - name: Allow all access to tcp port 8080
#    community.general.ufw:
#      rule: allow
#      port: '8080'
#      proto: tcp
#
#  - name: Allow all access to tcp port 80
#    community.general.ufw:
#      rule: allow
#      port: '80'
#      proto: tcp
#
#  - name: Allow all access to tcp port 443
#    community.general.ufw:
#      rule: allow
#      port: '443'
#      proto: tcp
#
#  - name: Allow all access to tcp port 4443
#    community.general.ufw:
#      rule: allow
#      port: '4443'
#      proto: tcp

- name: create directory bin for mirrors
  file:
    path: /var/www/html/bin
    state: directory
    mode: '0755'

- name: create directory bootstrap for mirrors
  file:
    path: /var/www/html/bootstrap
    state: directory
    mode: '0755'

- name: get mirrors 1
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/rhcos-live-kernel-s390x
    dest: /var/www/html/bin
    remote_src: yes
    mode: '0755'

- name: get mirrors 2
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/rhcos-live-initramfs.s390x.img
    dest: /var/www/html/bin
    remote_src: yes
    mode: '0755'

- name: get mirrors 3
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/rhcos-live-rootfs.s390x.img
    dest: /var/www/html/bin
    remote_src: yes
    mode: '0755'

- name: check to make sure httpd is started
  service:
    name: httpd
    state: started

- name: check httpd status
  service:
    state: started
    name: httpd

- name: create OCP download landing directory
  file:
    path: /ocpinst/
    state: directory

- name: Unzip OCP Client
  ansible.builtin.unarchive:
    src: https://mirror.openshift.com/pub/openshift-v4/s390x/clients/ocp/stable/openshift-client-linux.tar.gz
    dest: /ocpinst/
    remote_src: yes

- name: Unzip OCP Installer
  ansible.builtin.unarchive:
    src: https://mirror.openshift.com/pub/openshift-v4/s390x/clients/ocp/stable/openshift-install-linux.tar.gz
    dest: /ocpinst/
    remote_src: yes

- name: Copy kubectl file
  ansible.builtin.copy:
    src: /ocpinst/kubectl
    dest: /usr/local/bin/kubectl
    remote_src: yes
    owner: root
    group: root
    mode: '0755'

- name: Copy oc file
  ansible.builtin.copy:
    src: /ocpinst/oc
    dest: /usr/local/bin/oc
    remote_src: yes
    owner: root
    group: root
    mode: '0755'

- name: Copy openshift-install file
  ansible.builtin.copy:
    src: /ocpinst/openshift-install
    dest: /usr/local/bin/openshift-install
    remote_src: yes
    owner: root
    group: root
    mode: '0755'

- name: Copy install-config.yaml to ocp install directory
  copy:
    src: install-config.yaml
    dest: /ocpinst/install-config.yaml

- name: Create Manifests
  command: /ocpinst/openshift-install create manifests --dir=/ocpinst/
  become: yes

- name: Set mastersSchedulable parameter to False
  replace:
    path: /ocpinst/manifests/cluster-scheduler-02-config.yml
    regexp: ': true'
    replace: ': false'

- name: Create Ignition files
  command: /ocpinst/openshift-install create ignition-configs --dir=/ocpinst/
  become: yes

- name: create Ignition directory on webserver
  file:
    path: /var/www/html/ignition
    state: directory

- name: Copy bootstrap Ignition file to web server
  copy:
    src: /ocpinst/bootstrap.ign
    dest: /var/www/html/ignition
    remote_src: yes

- name: Copy control plane Ignition file to web server
  copy:
    src: /ocpinst/master.ign
    dest: /var/www/html/ignition
    remote_src: yes

- name: Copy worker Ignition file to web server
  copy:
    src: /ocpinst/worker.ign
    dest: /var/www/html/ignition
    remote_src: yes
