---

- hosts: bastion_server
  become: true
  tasks:

## from start_bastion_install.yaml   

  - name: start bastion install process
    community.libvirt.virt:
      name: bastion
      memory: 4096
      vcpus: 2
      disk size: 30
      cdrom: /var/lib/libvirt/images/rhel83.iso
      accelerate: yes
      import: yes
      network: network=macvtap-net
      extra-args: ""ip=9.60.87.139::9.60.86.1:255.255.254.0:bastion.distribution.ocpz.wsclab.endicott.ibm>
      location: /rhcos-install
      qemu-commandline: "-drive if=none,id=ignition,format=raw,file=/var/lib/libvirt/images/rhel83.iso,re>
      noautoconsole: yes

## from install_haproxy.yaml

##- name: install haproxy
##  dnf:
##  - haproxy

## required plugin:  ansible-galaxy collection install community.general

##- name: install haproxy
##  dnf:
##  - haproxy

  - name: move haproxy config file to bastion
    copy:
      src: haproxy.cfg
      dest: /etc/haproxy/haproxy.cfg.j2

  - name: Start haproxy
    systemd:
      state: started
      name: haproxy

## from http_setup.yaml

##- name: update repository index
##   dnf:
##     update_cache: yes

##- name: install httpd
##  dnf:
##    name: httpd
##    state: latest

  - name: Ensure the default Apache port is 8080
    replace:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^Listen 80 '
      replace: 'Listen 8080'
      backup: yes

  - name: Ensure the SSL default port is 4443
    replace:
      path: /etc/httpd/conf.d/ssl.conf
      regexp: '^Listen 443 https'
      replace: 'Listen 4443 https'
      backup: yes

  - name: restart httpd to reflect changes to port
    service:
      name: httpd
      state: restarted

  - name: Allow all access to tcp port 8080
    community.general.ufw:
      rule: allow
      port: '8080'
      proto: tcp

  - name: Allow all access to tcp port 80
    community.general.ufw:
      rule: allow
      port: '80'
      proto: tcp

  - name: Allow all access to tcp port 443
    community.general.ufw:
      rule: allow
      port: '443'
      proto: tcp

  - name: Allow all access to tcp port 4443
    community.general.ufw:
      rule: allow
      port: '4443'
      proto: tcp

  - name: create directory bin for mirrors
    file:
      path: /var/www/html/bin
      state: directory
      mode: '0755'

  - name: create directory bootstrap for mirrors
    file:
      path: /var/www/html/bootstrap
      state: directory
      mode: '0755'

  - name: get mirrors 1
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/rhcos-liv>
      dest: /var/www/html/bin
      remote_src: yes
      mode: '0755'

  - name: get mirrors 2
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/rhcos-liv>
      dest: /var/www/html/bin
      remote_src: yes
      mode: '0755'

  - name: get mirrors 3
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/rhcos-liv>
      dest: /var/www/html/bin
      remote_src: yes
      mode: '0755'

  - name: check to make sure httpd is started
    service:
      name: httpd
      state: started

  - name: check httpd status
    service:
      state: started
      name: httpd

  - name: change mirror 1 file name
    command: mv /var/www/html/bin/rhcos-live-kernel-s390x /var/www/html/bin/rhcos-kernel

  - name: change mirror 2 file name
    command: mv /var/www/html/bin/rhcos-live-initramfs.s390x.img /var/www/html/bin/rhcos-initramfs.img

  - name: change mirror 3 file name
    command: mv /var/www/html/bin/rhcos-live-rootfs.s390x.img /var/www/html/bin/rhcos-rootfs.img

##from get-ocp.yaml

  - name: create OCP download landing directory
    file:
      path: /ocpinst/
      state: directory

  - name: Unzip OCP Client
    ansible.builtin.unarchive:
      src: https://mirror.openshift.com/pub/openshift-v4/s390x/clients/ocp/stable/openshift-client-linux.tar.gz
      dest: /ocpinst/
      remote_src: yes

  - name: Unzip OCP Installer
    ansible.builtin.unarchive:
      src: https://mirror.openshift.com/pub/openshift-v4/s390x/clients/ocp/stable/openshift-install-linux.tar.gz
      dest: /ocpinst/
      remote_src: yes

  - name: Copy kubectl file
    ansible.builtin.copy:
      src: /ocpinst/kubectl
      dest: /usr/local/bin/kubectl
      remote_src: yes
      owner: root
      group: root
      mode: '0755'

  - name: Copy oc file
    ansible.builtin.copy:
      src: /ocpinst/oc
      dest: /usr/local/bin/oc
      remote_src: yes
      owner: root
      group: root
      mode: '0755'

  - name: Copy openshift-install file
    ansible.builtin.copy:
      src: /ocpinst/openshift-install
      dest: /usr/local/bin/openshift-install
      remote_src: yes
      owner: root
      group: root
      mode: '0755'

## Rough draft task here. To be completed once we start using templates. Use ansible.builtin.template to fill install_config.yaml with correct variables.

##  - name: create install-config.yaml
##    file:
##      path: "~/files/install-config.yaml"
##      state: touch
##
##  - name: Fill contents of install-config.yaml file
##    ansible.builtin.template:
##      src: install-config.yaml
##      dest: "~/files/install-config.yaml"
##      remote_src: yes

## also still needs the ignition files task and the prepare the KVM OCP guests tasks
