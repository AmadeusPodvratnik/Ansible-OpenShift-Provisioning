---

- name: create list of IP addresses from env.yaml
  tags: check_dns
  set_fact:
    ip_from_env: ['{{ env_ip_bastion }}','{{ env_ip_bootstrap }}','{{ env_ip_control_0 }}','{{ env_ip_control_1 }}','{{ env_ip_control_2 }}','{{ env_ip_compute_0 }}','{{ env_ip_compute_1 }}','{{ env_ip_bastion }}','{{ env_ip_bastion }}','{{ env_ip_bastion }}']

- name: check internal cluster DNS resolution
  tags: check_dns,dns
  shell: "dig +short {{ item }} | tail -n1"
  loop:
    - "{{ env_bastion_name }}.{{ env_baseDomain }}"
    - "{{ env_bootstrap_name }}.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "{{ env_control_0_name }}.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "{{ env_control_1_name }}.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "{{ env_control_2_name }}.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "{{ env_compute_0_name }}.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "{{ env_compute_1_name }}.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "api.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "api-int.{{ env_metadata_name }}.{{ env_baseDomain }}"
    - "test.apps.{{ env_metadata_name }}.{{ env_baseDomain }}"
  register: command_result
  failed_when: ip_from_env[i] != command_result.stdout
  loop_control:
    extended: yes
    index_var: i
    
- name: check external DNS resolution from DNS forwarder
  tags: check_dns,dns
  register: command_result
  # fail step if the output contains "server can't find"
  failed_when: '"server can" in command_result.stdout'
  command: "nslookup {{ item }}"
  loop: 
    - www.google.com
    - www.ibm.com
    - www.redhat.com