---

- name: Load in variables from env.yaml
  tags: setup
  include_vars: env.yaml

- name: Check for any undefined user-input variables in env.yaml. Fail if true.
  tags: setup
  fail:
    msg: Required variable "{{item}}" has not been provided in env.yaml file.
  when: vars[item] is undefined
  loop:
    - env_rh_email
    - env_rh_pass
    - env_apiVersion
    - env_baseDomain
    - env_hyperthreading_compute
    - env_compute_name
    - env_compute_count
    - env_compute_arch
    - env_hyperthreading_control
    - env_control_name
    - env_control_count
    - env_control_arch
    - env_metadata_name
    - env_cidr
    - env_host_prefix
    - env_network_type
    - env_service_network
    - env_fips
    - env_pullSecret
    - env_ip_kvm_host
    - env_ip_bastion
    - env_ip_bootstrap
    - env_ip_control_0
    - env_ip_control_1
    - env_ip_control_2
    - env_ip_compute_0
    - env_ip_compute_1
    - env_ssh_ans_name
    - env_ssh_ans_pass
    - env_ssh_ocp_comm
    - env_dns_nameserver
    - env_default_gateway
    - env_netmask
    - env_ftp
    - env_comp_disk_size
    - env_comp_ram
    - env_comp_cpu
    - env_comp_vcpu
    - env_comp_os_variant
    - env_cont_disk_size
    - env_cont_ram
    - env_cont_cpu
    - env_cont_vcpu
    - env_cont_os_variant

- name: Populate inventory file with ip variables from env.yaml
  tags: setup
  blockinfile:
    path: inventory
    block: |
      [kvm_host]
      {{ env_ip_kvm_host }}

      [bastion]
      {{ env_ip_bastion }}

      [bootstrap]
      {{ env_ip_bootstrap }}

      [control_nodes]

      [compute_nodes]
    state: present

- name: Populate inventory file with control IPs from env.yaml, the number of which depends on env_control_count
  tags: setup
  lineinfile:
    path: inventory
    line: "{{env_ip_control_{{ item }}}}"
    insertafter: '\[control_nodes]'
  with_sequence: count={{env_control_count}}
    
- name: Populate inventory file with compute IPs from env.yaml, the number of which depends on env_compute_count
  tags: setup
  lineinfile:
    path: inventory
    line: "{{ env_ip_compute_{{ item }} }}"
    insertafter: '\[compute_nodes]'
  with_sequence: count={{env_compute_count}}

- name: check inventory setup
  tags: setup
  command: ansible-inventory --list
  register: inv_check
  failed_when: inv_check.rc != 0

- name: Gather facts to re-read inventory after changes made to inventory
  tags: setup
  ansible.builtin.gather_facts:

- name: fill ansible.cfg with provided variable ansible ssh key file name
  tags: setup
  ansible.builtin.lineinfile:
    path: ansible.cfg
    insertafter: '\[defaults\]'
    line: private_key_file=~/.ssh/{{ env_ssh_ans_name }}

- name: delete ocp_ssh_pub file if it exists already to ensure idempotence
  tags: getocp, bastion
  file:
    state: absent
    path: roles/get-ocp/files/ocp_ssh_pub

- name: create ocp_ssh_pub if it needs to be
  file:
    path: roles/get-ocp/files/ocp_ssh_pub
    mode: '0755'
    state: touch