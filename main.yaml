---

- hosts: workstation
  tags: workstation,kvm_host
  connection: local
  become: false
  gather_facts: no
  vars_files:
    - env.yaml
  vars:
    - ssh_target: ["{{ env.ip.kvm }}","{{ env.access.login.kvm.user }}","{{ env.access.login.kvm.pass }}"]
  roles:
    - ssh_key_gen
    - ssh_copy_id
    - ssh_agent
    
- hosts: kvm_host
  tags: kvm_host,kvm_prep
  become: true
  vars_files:
    - env.yaml
  vars: 
    - packages: "{{ env.pkgs.kvm}}"
  roles:
    - check_ssh
    - {role: attach_subscription, when: env.redhat.username is defined and env.redhat.password is defined}
    - install_packages
    - macvtap
    - create_bastion

- hosts: workstation
  tags: workstation,bastion
  connection: local
  become: false
  gather_facts: no
  vars_files:
    - env.yaml
  vars:
    - ssh_target: ["{{ env.ip.bastion }}","{{ env.access.login.bastion.user }}","{{ env.access.login.bastion.pass }}"]
  roles:
    - ssh_copy_id

- hosts: bastion
  tags: bastion_setup,bastion
  become: true
  vars_files:
    - env.yaml
  vars:
    - packages: "{{env.pkgs.bastion}}"
  roles:
    - check_ssh
    - {role: attach_subscription, when: env.redhat.username is defined and env.redhat.password is defined}
    - install_packages
    - ssh_ocp_key_gen
    - set_firewall
    - {role: dns, when: env.networking.dns.setup_on_bastion }
    - check_dns
    - haproxy
    - httpd
    - {role: get_ocp, become: false }

- hosts: kvm_host
  tags: kvm_host,create_nodes
  become: true
  gather_facts: no
  vars_files:
    - env.yaml
  roles:
    - prep_kvm_guests
    - create_bootstrap
    - create_control_nodes
    - create_compute_nodes
    
- hosts: kvm_host
  tags: app
  become: true
  gather_facts: no
  vars_files:
    - env.yaml
  roles:
    - {role: create_extra_rhel, when: env.ip.app is defined }

- hosts: app
  tags: app_setup,app
  become: true
  vars_files:
    - env.yaml
  vars: 
    - packages: "{{ env.pkgs.app}}"
  roles: 
    - {role: attach_subscription, when: env.ip.app is defined and env.redhat.username is defined and env.redhat.password is defined}
    - {role: install_packages , when: env.ip.app is defined }
  
- hosts: bastion
  tags: verification,bastion
  become: false
  environment:
    KUBECONFIG: "/home/{{ env.access.login.bastion.user }}/ocpinst/auth/kubeconfig"
  gather_facts: yes
  vars_files:
    - env.yaml
  roles:
    - wait_for_bootstrap
    - approve_certs
    - check_nodes
    - wait_for_cluster_operators
    - wait_for_install_complete
