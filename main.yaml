---

- hosts: localhost
  connection: local
  become: false
  vars:
    - packages: [ 'ansible_galaxy', 'sshpass', 'ssh-keygen', 'ssh-copy-id', 'community.general' ]
    #- ssh_target_ip: host_vars[kvm_host][ip] #this is not right
    #- other vars needed: ssh_key_filename, ssh_target_password, ssh_target_username, ssh_target_ip
  vars_files:
    - ./env.yml
  roles:
    #- ansible_setup (check vars file for undefined vars, run ansible_setup, and fill necessary env vars files, run "ansible-inventory --list" and print to terminal (failed_when rc != 0) to check inventory is set up properly)
    - install_packages
    - ssh_key_gen
    #- ssh_copy_id

- hosts: kvm_host
  become: true
  vars:
    - packages: [ 'libvirt', 'libvirt-devel', 'libvirt-daemon-kvm', 'qemu-kvm', 'virt-manager', 'libvirt-daemon-config-network', 'libvirt-client', 'qemu-img' ]
  roles:
    - check_ssh
    - install_packages
    - set_selinux_permissive
    #- enable libvirt
    - macvtap
    - create_bastion #(reminder to eventually use kickstart installation files)

- hosts: localhost
  connection: local
  become: false
  gather_facts: no
  vars: 
    #- ssh_target_ip: host_vars[kvm_host][ip] #this is not right
  roles:
    - ssh_copy_id

- hosts: bastion
  become: true
  vars: 
    - packages: [ 'haproxy', 'httpd', 'mod_ssl', 'bind', 'bind_utils' ] #reminder that "bind" is called "named" after install
  roles:
    - check_ssh
    - firewall
    - set_selinux_permissive
    - dns
    - haproxy
    - httpd
    - get-ocp

- hosts: kvm_host
  become: true
  gather_facts: no
  roles:
    - prep_kvm_guests
    - create_bootstrap
    - create_control_nodes
    - create_compute_nodes

#- hosts: localhost
  #connection: local
  #become: false
  #gather_facts: yes
  #roles:
  #- ssh_config_jump

#- hosts: bastion
  #become: true
  #gather_facts: no
  #roles:
  #- wait_for_bootkube